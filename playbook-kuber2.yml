---
- name: üß™ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ö–æ—Å—Ç–æ–≤
  hosts: all
  gather_facts: yes
  become: yes
  vars:
    condor_image: "evgenii457/htcondor-manager228"
    central_manager_ip: "192.168.56.101"
    condor_logs_dir: "/var/log/condor"
    kube_bin_dir: "/usr/local/bin"
    venv_path: "/opt/htcondor_venv"

  pre_tasks:
    - name: üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Ansible
      file:
        path: "{{ ansible_env.HOME }}/.ansible/tmp"
        state: absent
      when: ansible_env.HOME is defined
      delegate_to: localhost

    - name: üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Ansible
      file:
        path: "{{ ansible_env.HOME }}/.ansible/tmp"
        state: directory
        mode: 0700
      when: ansible_env.HOME is defined
      delegate_to: localhost

    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      apt:
        name:
          - curl
          - wget
          - apt-transport-https
          - ca-certificates
          - gnupg
          - containerd.io
        state: present
      tags: setup

    - name: üß© –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Kubernetes
      shell: |
        curl -L -s https://dl.k8s.io/release/stable.txt
      register: k8s_version
      changed_when: false
      delegate_to: localhost

    - name: üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤ Kubernetes
      file:
        path: "{{ kube_bin_dir }}"
        state: directory
        mode: '0755'
      tags: setup

    - name: üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ kubectl
      get_url:
        url: "https://dl.k8s.io/release/{{  k8s_version.stdout }}/bin/linux/amd64/kubectl"
        dest: "{{ kube_bin_dir }}/kubectl"
        mode: '0755'
      tags: setup

    - name: üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ kubelet
      get_url:
        url: "https://dl.k8s.io/release/{{  k8s_version.stdout }}/bin/linux/amd64/kubelet"
        dest: "{{ kube_bin_dir }}/kubelet"
        mode: '0755'
      tags: setup

    - name: üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ kubeadm
      get_url:
        url: "https://dl.k8s.io/release/{{  k8s_version.stdout }}/bin/linux/amd64/kubeadm"
        dest: "{{ kube_bin_dir }}/kubeadm"
        mode: '0755'
      tags: setup

    - name: üõ† –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      command: "{{ item }} --version"
      loop:
        - "{{ kube_bin_dir }}/kubectl"
        - "{{ kube_bin_dir }}/kubelet"
        - "{{ kube_bin_dir }}/kubeadm"
      register: kubernetes_check
      ignore_errors: yes
      changed_when: false

    - name: ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ containerd
      copy:
        content: |
          version = 2
          [plugins."io.containerd.grpc.v1.cri"]
            sandbox_image = "registry.aliyuncs.com/google_containers/pause:3.10"
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              runtime_type = "io.containerd.runc.v2"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                SystemdCgroup = true
        dest: /etc/containerd/config.toml
      notify: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ containerd

  handlers:
    - name: üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ containerd
      service:
        name: containerd
        state: restarted

- name: üß± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞ Kubernetes
  hosts: central_manager
  become: yes
  vars:
    kube_bin_dir: "/usr/local/bin"
    venv_path: "/opt/htcondor_venv"

  tasks:
    - name: üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
      file:
        path: "/etc/kubernetes"
        state: absent
      tags: kubernetes

    - name: ‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
      command: |
        {{ kube_bin_dir }}/kubeadm init \
          --control-plane-endpoint "{{ central_manager_ip }}" \
          --apiserver-advertise-address="{{ central_manager_ip }}" \
          --apiserver-cert-extra-sans="manager" \
          --apiserver-cert-extra-sans="htcondor-manager" \
          --apiserver-cert-extra-sans="{{ central_manager_ip }}" \
          --pod-network-cidr=10.244.0.0/16 \
          --image-repository registry.aliyuncs.com/google_containers \
          --v=5
      args:
        chdir: "{{ kube_bin_dir }}"
      environment:
        PATH: "{{ kube_bin_dir }}:{{ ansible_env.PATH }}"
      register: cluster_init
      retries: 3
      delay: 10
      until: cluster_init is not failed
      tags: kubernetes
      delegate_to: central_manager
      run_once: true

    - name: üìã –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã join
      set_fact:
        join_command: "{{ cluster_init.stdout_lines[-1] | trim }}"
      delegate_to: central_manager
      run_once: true

    - name: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ .kube
      file:
        path: "{{ ansible_env.HOME }}/.kube"
        state: directory
        mode: 0700
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true

    - name: –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ admin.conf
      copy:
        src: "/etc/kubernetes/admin.conf"
        dest: "{{ ansible_env.HOME }}/.kube/config"
        remote_src: yes
        owner: "{{ ansible_env.USER }}"
        group: "{{ ansible_env.USER }}"
        mode: 0600
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true
    - name: üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞
      command: kubectl cluster-info
      environment:
        KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
      register: cluster_info
      retries: 15
      delay: 10
      until: cluster_info.rc == 0
      tags: kubernetes

    - name: üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Flannel CNI
      command: kubectl apply -f https://github.com/flannel-io/flannel/raw/master/Documentation/kube-flannel.yml  --validate=false
      environment:
        KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
      register: flannel_result
      retries: 3
      delay: 10
      until: flannel_result.rc == 0
      tags: kubernetes

    - name: üìÅ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Ansible
      set_fact:
        ansible_local_temp: "/tmp/ansible-tmp"
      run_once: true

    - name: üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      file:
        path: "{{ ansible_local_temp }}"
        state: directory
        mode: 0700
      run_once: true

    - name: üß™ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π KUBECONFIG
      set_fact:
        kubeconfig_path: "{{ ansible_env.HOME }}/.kube/config"
      run_once: true

- name: üß± –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ HTCondor –≤ Kubernetes
  hosts: central_manager
  become: yes
  vars:
    namespace: default

  tasks:
    - name: üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤ HTCondor
      file:
        path: "{{ condor_logs_dir }}"
        state: directory
        mode: 0755
      tags: htcondor

    - name: üìÑ –°–æ–∑–¥–∞–Ω–∏–µ ConfigMap –∏–∑ —à–∞–±–ª–æ–Ω–∞
      template:
        src: "htcondor-configmap.yaml.j2"
        dest: "/tmp/htcondor-configmap.yaml"
      delegate_to: central_manager
      run_once: true

    - name: üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ ConfigMap —á–µ—Ä–µ–∑ kubectl
      command: kubectl apply -f /tmp/htcondor-configmap.yaml
      args:
        chdir: /tmp
      environment:
        KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
      register: configmap_apply
      until: configmap_apply.rc == 0
      retries: 5
      delay: 10
      delegate_to: central_manager
      run_once: true

    - name: üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Deployment –¥–ª—è Central Manager
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: htcondor-manager
            namespace: "{{ namespace }}"
            labels:
              app: htcondor
              role: manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: htcondor
                role: manager
            template:
              metadata:
                labels:
                  app: htcondor
                  role: manager
              spec:
                containers:
                  - name: htcondor
                    image: "{{ condor_image }}"
                    env:
                      - name: CONDOR_CONFIG
                        value: "/etc/condor/condor_config"
                      - name: CONDOR_HOST
                        value: "{{ central_manager_ip }}"
                    ports:
                      - containerPort: 9618
                    volumeMounts:
                      - name: condor-config
                        mountPath: /etc/condor
                      - name: condor-logs
                        mountPath: /var/log/condor
                volumes:
                  - name: condor-config
                    configMap:
                      name: htcondor-config
                  - name: condor-logs
                    hostPath:
                      path: "{{ condor_logs_dir }}"
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true

    - name: üåê –°–æ–∑–¥–∞–Ω–∏–µ Service –¥–ª—è Central Manager
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: htcondor-manager
            namespace: "{{ namespace }}"
          spec:
            selector:
              app: htcondor
              role: manager
            ports:
              - protocol: TCP
                port: 9618
                targetPort: 9618
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true

    - name: üß± –°–æ–∑–¥–∞–Ω–∏–µ DaemonSet –¥–ª—è Execute Nodes
      kubernetes.core.k8s:
        definition:
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: htcondor-execute
            namespace: "{{ namespace }}"
          spec:
            selector:
              matchLabels:
                app: htcondor
                role: execute
            template:
              metadata:
                labels:
                  app: htcondor
                  role: execute
              spec:
                containers:
                  - name: htcondor
                    image: "{{ condor_image }}"
                    env:
                      - name: CONDOR_CONFIG
                        value: "/etc/condor/condor_config"
                      - name: CONDOR_HOST
                        value: "htcondor-manager"
                    ports:
                      - containerPort: 9618
                    volumeMounts:
                      - name: condor-config
                        mountPath: /etc/condor
                      - name: condor-logs
                        mountPath: /var/log/condor
                volumes:
                  - name: condor-config
                    configMap:
                      name: htcondor-config
                  - name: condor-logs
                    hostPath:
                      path: "{{ condor_logs_dir }}"
      when: "'execute_nodes' in group_names"
      delegate_to: central_manager
      run_once: true

    - name: üîê –°–æ–∑–¥–∞–Ω–∏–µ Job –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞—Ä–æ–ª—è
      kubernetes.core.k8s:
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: condor-password-setup
            namespace: "{{ namespace }}"
          spec:
            template:
              spec:
                containers:
                  - name: condor-password
                    image: "{{ condor_image }}"
                    command: ["sh", "-c"]
                    args:
                      - |
                        echo "{{ condor_cluster_password }}" | condor_store_cred -c add -f /etc/condor/passwords.d/POOL
                    volumeMounts:
                      - name: condor-config
                        mountPath: /etc/condor
                volumes:
                  - name: condor-config
                    configMap:
                      name: htcondor-config
                restartPolicy: OnFailure
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true

- name: üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
  hosts: central_manager
  become: no
  tasks:
    - name: üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–¥
      command: kubectl get nodes -o wide
      environment:
        KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"
      register: nodes_status
      tags: verify

    - name: üìã –í—ã–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–¥
      debug:
        msg: "{{ nodes_status.stdout }}"

    - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ Pod'–æ–≤
      command: kubectl get pods -A
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
      register: pods_status
      when: "'central_manager' in group_names"
      delegate_to: central_manager
      run_once: true

    - name: üìã –í—ã–≤–æ–¥ Pod'–æ–≤
      debug:
        msg: "{{ pods_status.stdout }}"
